<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.model.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="headImage" jdbcType="VARCHAR" property="headimage" />
    <result column="depict" jdbcType="VARCHAR" property="depict" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="secondaryCollege" jdbcType="VARCHAR" property="secondarycollege" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="loginTime" jdbcType="TIMESTAMP" property="logintime" />
    <result column="type" jdbcType="TINYINT" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, number, password, headImage, depict, sex, school, secondaryCollege, major, 
    grade, createTime, loginTime, type
  </sql>
  <select id="selectByExample" parameterType="com.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.User">
    insert into user (id, name, number, 
      password, headImage, depict, 
      sex, school, secondaryCollege, 
      major, grade, createTime, 
      loginTime, type)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{headimage,jdbcType=VARCHAR}, #{depict,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{secondarycollege,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{logintime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="headimage != null">
        headImage,
      </if>
      <if test="depict != null">
        depict,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="secondarycollege != null">
        secondaryCollege,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="logintime != null">
        loginTime,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="headimage != null">
        #{headimage,jdbcType=VARCHAR},
      </if>
      <if test="depict != null">
        #{depict,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="secondarycollege != null">
        #{secondarycollege,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.headimage != null">
        headImage = #{record.headimage,jdbcType=VARCHAR},
      </if>
      <if test="record.depict != null">
        depict = #{record.depict,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.secondarycollege != null">
        secondaryCollege = #{record.secondarycollege,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logintime != null">
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      headImage = #{record.headimage,jdbcType=VARCHAR},
      depict = #{record.depict,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      secondaryCollege = #{record.secondarycollege,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="headimage != null">
        headImage = #{headimage,jdbcType=VARCHAR},
      </if>
      <if test="depict != null">
        depict = #{depict,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="secondarycollege != null">
        secondaryCollege = #{secondarycollege,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logintime != null">
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      headImage = #{headimage,jdbcType=VARCHAR},
      depict = #{depict,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      secondaryCollege = #{secondarycollege,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>